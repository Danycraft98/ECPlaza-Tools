"""
Django settings for ECPlaza Tools project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
import dj_database_url
import dotenv as env
import django_heroku
from django.contrib.admin import AdminSite


# Quick-start Settings
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
env.load_dotenv(os.path.join(BASE_DIR, '.env'))

SECRET_KEY = os.getenv('SECRET_KEY')
DEBUG = os.getenv('DEBUG', True)
ALLOWED_HOSTS = ['*']


# Application definition ---------------------------------------------------------------------------

CORS_ORIGIN_ALLOW_ALL = True
INSTALLED_APPS = [
    'scout_apm.django',
    'accounts.apps.AccountsConfig',
    'file_app.apps.FileAppConfig',
    'api.apps.APIConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'chatterbot.ext.django_chatterbot',
    'corsheaders',
    'django_createuser',
    'django_extensions',
    'django_filters',
    'rest_framework',
    'rest_framework.authtoken'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',)
}

ROOT_URLCONF = 'ECPlazaTools.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            # 'libraries': {
            #     'custom_tags': 'api.templatetags.custom_tags',
            # }
        },
    }
]
WSGI_APPLICATION = 'ECPlazaTools.wsgi.application'


# Database -----------------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

if not DEBUG:
    db_url = os.getenv('DATABASE_URL', 'sqlite:///db.sqlite3')
else:
    db_url = os.environ.get('DATABASE_URL', 'sqlite:///db.sqlite3')

DATABASES = {
    'default': dj_database_url.config(default=db_url),
}


# Admin Site Settings ------------------------------------------------------------------------------

AdminSite.login_template = os.path.join(TEMPLATES[0].get('DIRS')[0], 'accounts', 'login.html')
AUTH_USER_MODEL = 'accounts.User'
LOGIN_REDIRECT_URL = '/'


# CORS Settings

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    'https://ecplaza-tools.herokuapp.com',
    'http://ecplaza-tools.herokuapp.com',
    'http://localhost:8000',
    'http://api-test.eckorea.net:7272',
    'https://google.ca',
    'http://api.visitkorea.or.kr/'
]


# Google Settings ----------------------------------------------------------------------------------

SCOPE = os.getenv('SCOPE')
KEY_FILEPATH = os.getenv('KEY_FILEPATH')
GOOGLE_VIEW_ID = os.getenv('GOOGLE_VIEW_ID')


# Google Settings ----------------------------------------------------------------------------------

ECP_API_URL = os.getenv('ECP_API_URL')
ECP_HT_URL = os.getenv('ECP_HT_URL')
ECP_TOUR_URL = os.getenv('ECP_TOUR_URL')


# Scout Settings -----------------------------------------------------------------------------------

SCOUT_MONITOR = True
SCOUT_KEY = os.getenv('SCOUT_KEY')
SCOUT_NAME = 'A FRIENDLY NAME FOR YOUR APP'


# ChatterBot Settings ------------------------------------------------------------------------------

CHATTERBOT = {
    'name': 'Tech Support Bot',
    'django_app_name': 'django_chatterbot',
    'logic_adapters': ['chatterbot.logic.BestMatch'],
    'trainer': 'chatterbot.trainers.ChatterBotCorpusTrainer',
    'training_data': [
        'chatterbot.corpus.english.greeting',
        'chatterbot.corpus.english.conversations',
        # 'chatterbot.corpus.custom.myown',
        'chatterbot.corpus.korean.greeting',
        'chatterbot.corpus.korean.conversations',
    ],

    'storage_adapter': 'chatterbot.storage.SQLStorageAdapter',
    'database_uri': db_url
}


# Password validation ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization -----------------------------------------------------------------------------
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = os.getenv('LANGUAGE_CODE')
TIME_ZONE = os.getenv('TIME_ZONE')
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images) -----------------------------------------------------------
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Upload Settings ----------------------------------------------------------------------------------
FILE_UPLOAD_MAX_MEMORY_SIZE = 3000000
UPLOADS_PATH = os.path.join(BASE_DIR, os.path.join('static', 'uploads'))
FILE_UPLOAD_TEMP_DIR = os.path.join(BASE_DIR, os.path.join('static', 'tmp-uploads'))
FILE_UPLOAD_HANDLERS = (
    'django.core.files.uploadhandler.MemoryFileUploadHandler',
    'ECPlazaTools.handlers.CustomTempFileUploadHandler'
)

django_heroku.settings(locals())
